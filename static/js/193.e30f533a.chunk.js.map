{"version":3,"file":"static/js/193.e30f533a.chunk.js","mappings":"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","sources":["components/suggest.tsx","components/search-form.tsx","hooks/context.tsx","modules/search-module.tsx","hooks/use-debounce.tsx","components/search-content.tsx","pages/search-page.tsx","store/historys/history-actions.ts","ui/card/main-card.tsx","ui/input/input.tsx"],"sourcesContent":["import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { Link } from '../ui/link/link'\nimport { P1, P3 } from '../assets/styles/texts'\n\nimport { Routes } from '../constants/routes'\n\nimport type { modifyedBeer } from '../models/beer-model'\n\ntype Props = {\n  beers: modifyedBeer[]\n  searchValue: string\n  debounceValue: string\n  isLoading: boolean\n}\n\nexport const Suggest = ({ beers, searchValue, debounceValue, isLoading }: Props) => (\n  <>\n    {searchValue && debounceValue && (\n      <SearchWrapper>\n        {isLoading ? (\n          <Wrap>\n            <P3>Loading....</P3>\n          </Wrap>\n        ) : beers.length === 0 ? (\n          <Wrap>\n            <P3>Ничего не найдено</P3>\n          </Wrap>\n        ) : (\n          beers.map((item) => (\n            <Link to={`${Routes.CARD}/${item.id}`} key={item.id}>\n              <SearchItem>\n                <P1>{item.name}</P1>\n              </SearchItem>\n            </Link>\n          ))\n        )}\n      </SearchWrapper>\n    )}\n  </>\n)\n\nconst SearchWrapper = styled.ul`\n  position: absolute;\n  top: 110px;\n  width: 315px;\n  min-height: 20px;\n  max-height: 300px;\n  overflow: overlay;\n  background: ${(props) => props.theme.colors.white};\n  border-radius: ${(props) => props.theme.borders.primary};\n`\n\nconst SearchItem = styled.li`\n  padding: 10px 0 5px 10px;\n`\n\nconst Wrap = styled.div`\n  text-align: center;\n`\n","import React, { useEffect } from 'react'\n\nimport { SubmitHandler, useForm } from 'react-hook-form'\n\nimport styled from 'styled-components'\n\nimport { Input } from '../ui/input/input'\nimport { Button } from '../ui/button/button'\n\nimport { useSearchDispatch } from '../hooks/context'\n\nimport { Suggest } from './suggest'\n\nimport type { Search } from '../models/search-model'\nimport type { modifyedBeer } from '../models/beer-model'\n\ntype Props = {\n  onSubmitForm: (data: Search) => void\n  beers: modifyedBeer[]\n  isLoading: boolean\n  debounceValue: string\n}\n\nconst defaultSearchFormValues = {\n  search: ''\n}\n\nexport const SearchForm = (props: Props) => {\n  const dispatchContext = useSearchDispatch()\n  const { onSubmitForm, beers, isLoading, debounceValue } = props\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    watch,\n    formState: { errors, isSubmitting, isDirty }\n  } = useForm<Search>({\n    defaultValues: defaultSearchFormValues,\n    mode: 'onBlur',\n    criteriaMode: 'all'\n  })\n\n  const searchValue = watch('search', defaultSearchFormValues.search)\n\n  useEffect(() => {\n    dispatchContext({ type: 'addSearchValue', searchValue: searchValue })\n  }, [dispatchContext, searchValue])\n\n  const onSubmit: SubmitHandler<Search> = (data) => {\n    onSubmitForm(data)\n    reset()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input placeholder='Search beers ...' type='search' {...register('search')} errorOn={!!errors.search} />\n      <Suggest beers={beers} searchValue={searchValue} debounceValue={debounceValue} isLoading={isLoading} />\n\n      <Button type='submit' size={'middle'} disabled={!isDirty || isSubmitting}>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nconst Form = styled.form`\n  display: flex;\n  gap: 10px;\n  width: 100%;\n  background-color: ${(props) => props.theme.colors.black};\n  border-top: 2px solid ${(props) => props.theme.colors.accent};\n  padding: 10px 0 0 10px;\n`\n","import { useContext } from 'react'\n\nimport { SearchContext, SearchDispatchContext } from '../context/search-context'\n\nexport const useSearch = () => useContext(SearchContext)\nexport const useSearchDispatch = () => useContext(SearchDispatchContext)\n","import React from 'react'\n\nimport { useNavigate } from 'react-router-dom'\nimport { useSearchParams } from 'react-router-dom'\n\nimport { SearchForm } from '../components/search-form'\n\nimport { useDebounce } from '../hooks/use-debounce'\nimport { useSearch } from '../hooks/context'\n\nimport { useAppSelector, useAppDispatch } from '../hooks/store'\nimport { authSelectors } from '../store/auth/auth-selectors'\nimport { addHistory } from '../store/historys/history-actions'\n\nimport { useDoSearchQuery } from '../store/rtk-query.ts/search-api'\n\nimport { Routes } from '../constants/routes'\n\nimport type { Search } from '../models/search-model'\n\nexport const SearchModule = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_, setSearchQuery] = useSearchParams()\n\n  const isAuth = useAppSelector(authSelectors.getIsAuth)\n  const dispatch = useAppDispatch()\n  const searchValue = useSearch()\n  const navigate = useNavigate()\n\n  const debouncedSearchValue = useDebounce(searchValue.searchValue, 2000)\n\n  const { data: beers = [], isLoading } = useDoSearchQuery(\n    { beerName: debouncedSearchValue },\n    {\n      skip: !Boolean(debouncedSearchValue)\n    }\n  )\n\n  const handleSubmit = (data: Search) => {\n    navigate(Routes.SEARCH)\n    setSearchQuery({ beer_name: data.search })\n    if (isAuth) {\n      dispatch(addHistory(data.search))\n    }\n  }\n\n  return (\n    <SearchForm beers={beers} isLoading={isLoading} debounceValue={debouncedSearchValue} onSubmitForm={handleSubmit} />\n  )\n}\n","import { useEffect, useState } from 'react'\n\nexport function useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { useSearchParams } from 'react-router-dom'\n\nimport { P3 } from '../assets/styles/texts'\n\nimport { useDoSearchQuery } from '../store/rtk-query.ts/search-api'\n\nimport { CardForMainPage } from '../ui/card/main-card'\n\nexport const SearchContent = () => {\n  const [searchQuery] = useSearchParams()\n  const query = searchQuery.get('beer_name')\n\n  const { data: beers = [] } = useDoSearchQuery(\n    { beerName: query! },\n    {\n      skip: !Boolean(query)\n    }\n  )\n\n  return (\n    <Container>\n      <List>\n        {beers.length !== 0 ? (\n          beers.map((item) => (\n            <CardForMainPage\n              key={item.id}\n              id={item.id}\n              name={item.name}\n              imageUrl={item.imageUrl}\n              description={item.description}\n              abv={item.abv}\n              ibu={item.ibu ?? ''}\n              isFavorite={false}\n            />\n          ))\n        ) : (\n          <P3>Ничего не найдено</P3>\n        )}\n      </List>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  width: 60%;\n`\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px 0 80px 0;\n`\n","import React from 'react'\n\nimport { BaseLayoutWithHeaderFooter } from '../components/layout/base-layout-with-header-footer'\nimport { SearchModule } from '../modules/search-module'\nimport { SearchContent } from '../components/search-content'\n\nexport const SearchPage = () => (\n  <BaseLayoutWithHeaderFooter>\n    <SearchModule />\n    <SearchContent />\n  </BaseLayoutWithHeaderFooter>\n)\n\nexport default SearchPage\n","import { serviceApi } from '../../api/service-api'\n\nimport { addHistoryQuery, deleteHistoryQuery, getHistorysOfCurrentUser } from './historys-slices'\n\nimport type { AppDispatch } from '../store'\n\nexport const addHistory = (query: string) => (dispatch: AppDispatch) => {\n  serviceApi.addStory(query)\n  dispatch(addHistoryQuery(query))\n}\n\nexport const deleteHistory = (query: string) => (dispatch: AppDispatch) => {\n  serviceApi.deleteStory(query)\n  dispatch(deleteHistoryQuery(query))\n}\n\nexport const getHistorys = () => (dispatch: AppDispatch) => {\n  const currentUser = serviceApi.getCurrentUser()\n  if (currentUser) {\n    dispatch(getHistorysOfCurrentUser(currentUser.data.history))\n  } else {\n    dispatch(getHistorysOfCurrentUser([]))\n  }\n}\n","import React, { memo } from 'react'\n\nimport styled from 'styled-components'\n\nimport { Link } from '../link/link'\nimport { Button } from '../button/button'\nimport { H3, P2, P4 } from '../../assets/styles/texts'\nimport { IconBookMark } from '../../assets/icons/icon-favorites'\n\nimport { useToggle } from '../../hooks/use-toggle'\n\nimport { Routes } from '../../constants/routes'\n\nimport { useAppSelector, useAppDispatch } from '../../hooks/store'\nimport { authSelectors } from '../../store/auth/auth-selectors'\n\nimport { addFavorites, deleteFavorites } from '../../store/favorites/favorites-slices'\n\nimport defaultImage from '../../assets/images/default-image-card.jpg'\n\ntype Props = {\n  id: number\n  name: string\n  imageUrl: string\n  description: string\n  abv: number\n  ibu: number\n  isFavorite: boolean\n}\n\nexport const CardForMainPage = memo((props: Props) => {\n  const dispatch = useAppDispatch()\n  const { id, name, imageUrl, description, abv, ibu, isFavorite } = props\n  const isAuth = useAppSelector(authSelectors.getIsAuth)\n\n  const [isToggled, setToggled] = useToggle(isFavorite)\n\n  const handleClick = () => {\n    if (!isToggled) {\n      dispatch(addFavorites(props))\n    } else {\n      dispatch(deleteFavorites(id))\n    }\n    setToggled()\n  }\n\n  return (\n    <Container>\n      <ImageWrapper>\n        <ImageLink to={`${Routes.CARD}/${id}`}>\n          <img src={imageUrl ?? defaultImage} alt='beer' />\n        </ImageLink>\n      </ImageWrapper>\n      <Wrapper>\n        <Link to={`${Routes.CARD}/${id}`}>\n          <H3>{name}</H3>\n        </Link>\n        <P2>{description}</P2>\n        <P4>\n          ABV-{abv}% IBU-{ibu}\n        </P4>\n      </Wrapper>\n      <BookMark>\n        {isAuth ? (\n          <Button size={'small'} onClick={handleClick}>\n            <IconBookMark color={!isToggled ? 'dark' : 'blue'} />\n          </Button>\n        ) : null}\n      </BookMark>\n    </Container>\n  )\n})\n\nconst Container = styled.li`\n  display: flex;\n  align-items: flex-start;\n  gap: 20px;\n  padding: 15px;\n  background: ${(props) => props.theme.colors.white};\n  border-radius: ${(props) => props.theme.borders.primary};\n  border: 1px solid #7e6464;\n`\n\nconst ImageWrapper = styled.div`\n  align-self: center;\n`\n\nconst ImageLink = styled(Link)`\n  display: block;\n  width: 30px;\n  height: 120px;\n\n  & img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 30px;\n`\n\nconst BookMark = styled.div`\n  flex: 1 0 auto;\n  text-align: end;\n  min-width: 40px;\n`\n","import React, { ForwardedRef, forwardRef, InputHTMLAttributes } from 'react'\n\nimport styled from 'styled-components'\n\ntype Props = {\n  errorOn?: boolean\n} & InputHTMLAttributes<HTMLInputElement>\n\nexport const Input = forwardRef((props: Props, ref: ForwardedRef<HTMLInputElement>): React.JSX.Element => {\n  const { errorOn, ...rest } = props\n\n  return (\n    <Wrapper>\n      <InputStyled $errorOn={errorOn} ref={ref} {...rest} />\n    </Wrapper>\n  )\n})\n\nconst Wrapper = styled.div`\n  max-width: 315px;\n  width: 100%;\n`\n\nconst InputStyled = styled.input<{ $errorOn?: boolean }>`\n  width: 100%;\n  height: 34px;\n  background: ${(props) => props.theme.colors.backgroundInput};\n  border-radius: ${(props) => props.theme.borders.primary};\n  border: 1px solid ${(props) => (props.$errorOn ? props.theme.colors.error : props.theme.colors.white)};\n  color: ${(props) => (props.$errorOn ? props.theme.text.error : props.theme.text.textInvert)};\n  padding-left: 10px;\n  margin-bottom: 18px;\n\n  &::placeholder {\n    color: ${(props) => props.theme.text.placeholder};\n  }\n\n  &:hover,\n  :focus {\n    ::placeholder {\n      color: ${(props) => props.theme.text.placeholder};\n    }\n  }\n`\n"],"names":["Suggest","_ref","beers","searchValue","debounceValue","isLoading","_jsx","_Fragment","children","SearchWrapper","Wrap","P3","length","map","item","Link","to","concat","Routes","CARD","id","SearchItem","P1","name","styled","ul","_templateObject","_taggedTemplateLiteral","props","theme","colors","white","borders","primary","li","_templateObject2","div","_templateObject3","defaultSearchFormValues","search","SearchForm","dispatchContext","useContext","SearchDispatchContext","onSubmitForm","register","reset","handleSubmit","watch","formState","errors","isSubmitting","isDirty","useForm","defaultValues","mode","criteriaMode","useEffect","type","_jsxs","Form","onSubmit","data","Input","placeholder","errorOn","Button","size","disabled","form","black","accent","SearchModule","_","setSearchQuery","useSearchParams","isAuth","useAppSelector","authSelectors","getIsAuth","dispatch","useAppDispatch","SearchContext","navigate","useNavigate","debouncedSearchValue","value","delay","debouncedValue","setDebouncedValue","useState","timer","setTimeout","clearTimeout","useDebounce","useDoSearchQuery","beerName","skip","Boolean","SEARCH","beer_name","addHistory","SearchContent","searchQuery","query","get","Container","List","_item$ibu","CardForMainPage","imageUrl","description","abv","ibu","isFavorite","SearchPage","BaseLayoutWithHeaderFooter","serviceApi","addStory","addHistoryQuery","deleteHistory","deleteStory","deleteHistoryQuery","getHistorys","currentUser","getCurrentUser","getHistorysOfCurrentUser","history","memo","isToggled","setToggled","useToggle","ImageWrapper","ImageLink","src","defaultImage","alt","Wrapper","H3","P2","P4","BookMark","onClick","handleClick","deleteFavorites","addFavorites","IconBookMark","color","_templateObject4","_templateObject5","forwardRef","ref","rest","InputStyled","$errorOn","input","backgroundInput","error","text","textInvert"],"sourceRoot":""}