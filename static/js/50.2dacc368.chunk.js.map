{"version":3,"file":"static/js/50.2dacc368.chunk.js","mappings":"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","sources":["components/favorites-content.tsx","pages/favorites-page.tsx","store/favorites/favorites-selectors.ts","ui/card/main-card.tsx"],"sourcesContent":["import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { P3 } from '../assets/styles/texts'\n\nimport { useAppSelector } from '../hooks/store'\nimport { favoritesSelectors } from '../store/favorites/favorites-selectors'\n\nimport { CardForMainPage } from '../ui/card/main-card'\n\nexport const FavoritesContent = () => {\n  const favoritesBeers = useAppSelector(favoritesSelectors.getFavorites)\n  const isFavorite = useAppSelector(favoritesSelectors.getIsFavourites)\n\n  return (\n    <Container>\n      <List>\n        {favoritesBeers.length !== 0 ? (\n          favoritesBeers.map((item) => (\n            <CardForMainPage\n              key={item.id}\n              id={item.id}\n              name={item.name}\n              imageUrl={item.imageUrl}\n              description={item.description}\n              abv={item.abv}\n              ibu={item.ibu ?? ''}\n              isFavorite={isFavorite}\n            />\n          ))\n        ) : (\n          <P3>Список избранных пуст</P3>\n        )}\n      </List>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  width: 60%;\n`\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px 0 80px 0;\n`\n","import React, { useEffect } from 'react'\n\nimport { BaseLayoutWithHeaderFooter } from '../components/layout/base-layout-with-header-footer'\nimport { FavoritesContent } from '../components/favorites-content'\n\nimport { useAppDispatch } from '../hooks/store'\nimport { getFavorites } from '../store/favorites/favorite-actions'\n\nconst FavoritesPage = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(getFavorites())\n  })\n\n  return (\n    <BaseLayoutWithHeaderFooter>\n      <FavoritesContent />\n    </BaseLayoutWithHeaderFooter>\n  )\n}\n\nexport default FavoritesPage\n","import { RootState } from '../store'\n\nconst getFavorites = (state: RootState) => state.favourites.favorites\nconst getIsFavourites = (state: RootState) => state.favourites.isFavorites\n\nexport const favoritesSelectors = { getFavorites, getIsFavourites }\n","import React, { memo } from 'react'\n\nimport styled from 'styled-components'\n\nimport { Link } from '../link/link'\nimport { Button } from '../button/button'\nimport { H3, P2, P4 } from '../../assets/styles/texts'\nimport { IconBookMark } from '../../assets/icons/icon-favorites'\n\nimport { useToggle } from '../../hooks/use-toggle'\n\nimport { Routes } from '../../constants/routes'\n\nimport { useAppSelector, useAppDispatch } from '../../hooks/store'\nimport { authSelectors } from '../../store/auth/auth-selectors'\n\nimport { addFavorites, deleteFavorites } from '../../store/favorites/favorites-slices'\n\nimport defaultImage from '../../assets/images/default-image-card.jpg'\n\ntype Props = {\n  id: number\n  name: string\n  imageUrl: string\n  description: string\n  abv: number\n  ibu: number\n  isFavorite: boolean\n}\n\nexport const CardForMainPage = memo((props: Props) => {\n  const dispatch = useAppDispatch()\n  const { id, name, imageUrl, description, abv, ibu, isFavorite } = props\n  const isAuth = useAppSelector(authSelectors.getIsAuth)\n\n  const [isToggled, setToggled] = useToggle(isFavorite)\n\n  const handleClick = () => {\n    if (!isToggled) {\n      dispatch(addFavorites(props))\n    } else {\n      dispatch(deleteFavorites(id))\n    }\n    setToggled()\n  }\n\n  return (\n    <Container>\n      <ImageWrapper>\n        <ImageLink to={`${Routes.CARD}/${id}`}>\n          <img src={imageUrl ?? defaultImage} alt='beer' />\n        </ImageLink>\n      </ImageWrapper>\n      <Wrapper>\n        <Link to={`${Routes.CARD}/${id}`}>\n          <H3>{name}</H3>\n        </Link>\n        <P2>{description}</P2>\n        <P4>\n          ABV-{abv}% IBU-{ibu}\n        </P4>\n      </Wrapper>\n      <BookMark>\n        {isAuth ? (\n          <Button size={'small'} onClick={handleClick}>\n            <IconBookMark color={!isToggled ? 'dark' : 'blue'} />\n          </Button>\n        ) : null}\n      </BookMark>\n    </Container>\n  )\n})\n\nconst Container = styled.li`\n  display: flex;\n  align-items: flex-start;\n  gap: 20px;\n  padding: 15px;\n  background: ${(props) => props.theme.colors.white};\n  border-radius: ${(props) => props.theme.borders.primary};\n  border: 1px solid #7e6464;\n`\n\nconst ImageWrapper = styled.div`\n  align-self: center;\n`\n\nconst ImageLink = styled(Link)`\n  display: block;\n  width: 30px;\n  height: 120px;\n\n  & img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 30px;\n`\n\nconst BookMark = styled.div`\n  flex: 1 0 auto;\n  text-align: end;\n  min-width: 40px;\n`\n"],"names":["FavoritesContent","favoritesBeers","useAppSelector","favoritesSelectors","getFavorites","isFavorite","getIsFavourites","_jsx","Container","children","List","length","map","item","_item$ibu","CardForMainPage","id","name","imageUrl","description","abv","ibu","P3","styled","div","_templateObject","_taggedTemplateLiteral","ul","_templateObject2","FavoritesPage","dispatch","useAppDispatch","useEffect","BaseLayoutWithHeaderFooter","state","favourites","favorites","isFavorites","memo","props","isAuth","authSelectors","getIsAuth","isToggled","setToggled","useToggle","_jsxs","ImageWrapper","ImageLink","to","concat","Routes","CARD","src","defaultImage","alt","Wrapper","Link","H3","P2","P4","BookMark","Button","size","onClick","handleClick","deleteFavorites","addFavorites","IconBookMark","color","li","theme","colors","white","borders","primary","_templateObject3","_templateObject4","_templateObject5"],"sourceRoot":""}