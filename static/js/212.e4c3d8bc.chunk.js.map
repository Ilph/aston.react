{"version":3,"file":"static/js/212.e4c3d8bc.chunk.js","mappings":"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","sources":["store/favorites/favorites-selectors.ts","components/favorites-content.tsx","pages/favorites-page.tsx","ui/card/card-for-main-page.tsx","hooks/useToggle.tsx"],"sourcesContent":["import { RootState } from '../store'\n\nconst getFavorites = (state: RootState) => state.favourites.favorites\nconst getIsFavourites = (state: RootState) => state.favourites.isFavorites\n\nexport const favoritesSelectors = { getFavorites, getIsFavourites }\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { useAppSelector } from '../hooks/store'\nimport { favoritesSelectors } from '../store/favorites/favorites-selectors'\n\nimport { CardForMainPage } from '../ui/card/card-for-main-page'\n\nexport const FavoritesContent = () => {\n  const favoritesBeers = useAppSelector(favoritesSelectors.getFavorites)\n  const isFavorites = useAppSelector(favoritesSelectors.getIsFavourites)\n\n  return (\n    <Container>\n      <List>\n        {favoritesBeers.map((item) => (\n          <CardForMainPage\n            key={item.id}\n            id={item.id}\n            name={item.name}\n            imageUrl={item.imageUrl}\n            description={item.description}\n            abv={item.abv}\n            ibu={item.ibu ?? ''}\n            isFavorite={isFavorites}\n          />\n        ))}\n      </List>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  width: 60%;\n`\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px 0 80px 0;\n`\n","import React from 'react'\n\nimport { BaseLayoutWithHeaderFooter } from '../components/layout/base-layout-with-header-footer'\nimport { FavoritesContent } from '../components/favorites-content'\n\nconst FavoritesPage = () => (\n  <BaseLayoutWithHeaderFooter>\n    <FavoritesContent />\n  </BaseLayoutWithHeaderFooter>\n)\n\nexport default FavoritesPage\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nimport { Link } from '../link/link'\nimport { Button } from '../button/button'\nimport { H3, P2, P4 } from '../../assets/styles/texts'\nimport { IconBookMark } from '../../assets/icons/icon-favorites'\n\nimport { useToggle } from '../../hooks/useToggle'\n\nimport { Routes } from '../../constants/routes'\n\nimport { useAppSelector, useAppDispatch } from '../../hooks/store'\nimport { authSelectors } from '../../store/auth/auth-selectors'\nimport { addFavorites, deleteFavorites } from '../../store/favorites/favorites-slices'\n\nimport defaultImage from '../../assets/images/default-image-card.jpg'\n\ntype Props = {\n  id: number\n  name: string\n  imageUrl: string\n  description: string\n  abv: number\n  ibu: number\n  isFavorite?: boolean\n}\n\nexport const CardForMainPage = (props: Props) => {\n  const dispatch = useAppDispatch()\n  const { id, name, imageUrl, description, abv, ibu, isFavorite } = props\n  const isAuth = useAppSelector(authSelectors.getIsAuth)\n\n  //TODO еще надо подумать про переключение иконки\n  const [isToggled, setToggled] = useToggle(true)\n\n  const handleClick = () => {\n    if (isFavorite) {\n      dispatch(deleteFavorites(id))\n      return\n    }\n\n    if (isToggled) {\n      dispatch(addFavorites(props))\n    } else {\n      dispatch(deleteFavorites(id))\n    }\n    setToggled()\n  }\n\n  return (\n    <Container>\n      <ImageWrapper>\n        <ImageLink to={`${Routes.CARD}/${id}`}>\n          <img src={imageUrl ?? defaultImage} alt='beer' />\n        </ImageLink>\n      </ImageWrapper>\n      <Wrapper>\n        <Link to={`${Routes.CARD}/${id}`}>\n          <H3>{name}</H3>\n        </Link>\n        <P2>{description}</P2>\n        <P4>\n          ABV-{abv}% IBU-{ibu}\n        </P4>\n      </Wrapper>\n      <BookMark>\n        {isAuth ? (\n          <Button size={'small'} onClick={handleClick}>\n            <IconBookMark color={isFavorite ? 'blue' : isToggled ? 'black' : 'blue'} />\n          </Button>\n        ) : null}\n      </BookMark>\n    </Container>\n  )\n}\n\nconst Container = styled.li`\n  display: flex;\n  align-items: flex-start;\n  gap: 20px;\n  padding: 15px;\n  background: ${(props) => props.theme.colors.white};\n  border-radius: ${(props) => props.theme.borders.primary};\n  border: 1px solid #7e6464;\n`\n\nconst ImageWrapper = styled.div`\n  align-self: center;\n`\n\nconst ImageLink = styled(Link)`\n  display: block;\n  width: 30px;\n  height: 120px;\n\n  & img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 30px;\n`\n\nconst BookMark = styled.div`\n  flex: 1 0 auto;\n  text-align: end;\n  min-width: 40px;\n`\n","import { useState } from 'react'\n\nexport const useToggle = (defaultValue: boolean): [boolean, () => void] => {\n  const [value, setValue] = useState(defaultValue)\n\n  const toggle = () => setValue(!value)\n\n  return [value, toggle]\n}\n"],"names":["favoritesSelectors","state","favourites","favorites","isFavorites","FavoritesContent","favoritesBeers","useAppSelector","_jsx","Container","children","List","map","item","_item$ibu","CardForMainPage","id","name","imageUrl","description","abv","ibu","isFavorite","styled","div","_templateObject","_taggedTemplateLiteral","ul","_templateObject2","FavoritesPage","BaseLayoutWithHeaderFooter","props","dispatch","useAppDispatch","isAuth","authSelectors","getIsAuth","isToggled","setToggled","defaultValue","value","setValue","useState","toggle","useToggle","_jsxs","ImageWrapper","ImageLink","to","concat","Routes","CARD","src","defaultImage","alt","Wrapper","Link","H3","P2","P4","BookMark","Button","size","onClick","handleClick","deleteFavorites","addFavorites","IconBookMark","color","li","theme","colors","white","borders","primary","_templateObject3","_templateObject4","_templateObject5"],"sourceRoot":""}